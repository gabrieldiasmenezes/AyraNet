// <auto-generated />
using System;
using Ayra.Infrastructure.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Oracle.EntityFrameworkCore.Metadata;

#nullable disable

namespace Ayra.Infrastructure.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250601000910_NewMigration")]
    partial class NewMigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            OracleModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Ayra.Domain.Entities.Alert", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("AlertDateTime")
                        .HasColumnType("TIMESTAMP(7)");

                    b.Property<int>("CoordinateId")
                        .HasColumnType("NUMBER(10)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<string>("EvacuationTime")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<string>("Intensity")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<int>("MapMarkerId")
                        .HasColumnType("NUMBER(10)");

                    b.Property<double>("Radius")
                        .HasColumnType("BINARY_DOUBLE");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)");

                    b.HasKey("Id");

                    b.HasIndex("CoordinateId");

                    b.HasIndex("MapMarkerId");

                    b.ToTable("Alerts");
                });

            modelBuilder.Entity("Ayra.Domain.Entities.Coordinate", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DateCoordinate")
                        .HasColumnType("TIMESTAMP(7)");

                    b.Property<double>("Latitude")
                        .HasColumnType("BINARY_DOUBLE");

                    b.Property<double>("Longitude")
                        .HasColumnType("BINARY_DOUBLE");

                    b.HasKey("Id");

                    b.ToTable("Coordinates");
                });

            modelBuilder.Entity("Ayra.Domain.Entities.EmergencyContact", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)");

                    b.HasKey("Id");

                    b.ToTable("EmergencyContacts");
                });

            modelBuilder.Entity("Ayra.Domain.Entities.EmergencyUser", b =>
                {
                    b.Property<int>("EmergencyContactId")
                        .HasColumnType("NUMBER(10)");

                    b.Property<int>("UserId")
                        .HasColumnType("NUMBER(10)");

                    b.HasKey("EmergencyContactId", "UserId");

                    b.HasIndex("UserId");

                    b.ToTable("EmergencyUsers");
                });

            modelBuilder.Entity("Ayra.Domain.Entities.MapMarker", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CoordinateId")
                        .HasColumnType("NUMBER(10)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<string>("Intensity")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<double>("Radius")
                        .HasColumnType("BINARY_DOUBLE");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)");

                    b.HasKey("Id");

                    b.HasIndex("CoordinateId");

                    b.ToTable("MapMarkers");
                });

            modelBuilder.Entity("Ayra.Domain.Entities.SafeLocation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AlertId")
                        .HasColumnType("NUMBER(10)");

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)");

                    b.HasKey("Id");

                    b.HasIndex("AlertId");

                    b.ToTable("SafeLocations");
                });

            modelBuilder.Entity("Ayra.Domain.Entities.SafeRoute", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AlertId")
                        .HasColumnType("NUMBER(10)");

                    b.Property<string>("Route")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)");

                    b.HasKey("Id");

                    b.HasIndex("AlertId");

                    b.ToTable("SafeRoutes");
                });

            modelBuilder.Entity("Ayra.Domain.Entities.SafeTip", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AlertId")
                        .HasColumnType("NUMBER(10)");

                    b.Property<string>("Tip")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)");

                    b.HasKey("Id");

                    b.HasIndex("AlertId");

                    b.ToTable("SafeTips");
                });

            modelBuilder.Entity("Ayra.Domain.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CoordinateId")
                        .HasColumnType("NUMBER(10)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)");

                    b.HasKey("Id");

                    b.HasIndex("CoordinateId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Ayra.Domain.Entities.Alert", b =>
                {
                    b.HasOne("Ayra.Domain.Entities.Coordinate", "Coordinate")
                        .WithMany()
                        .HasForeignKey("CoordinateId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Ayra.Domain.Entities.MapMarker", "MapMarker")
                        .WithMany()
                        .HasForeignKey("MapMarkerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Coordinate");

                    b.Navigation("MapMarker");
                });

            modelBuilder.Entity("Ayra.Domain.Entities.EmergencyUser", b =>
                {
                    b.HasOne("Ayra.Domain.Entities.EmergencyContact", "EmergencyContact")
                        .WithMany("EmergencyUsers")
                        .HasForeignKey("EmergencyContactId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Ayra.Domain.Entities.User", "User")
                        .WithMany("EmergencyUsers")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("EmergencyContact");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Ayra.Domain.Entities.MapMarker", b =>
                {
                    b.HasOne("Ayra.Domain.Entities.Coordinate", "Coordinate")
                        .WithMany()
                        .HasForeignKey("CoordinateId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Coordinate");
                });

            modelBuilder.Entity("Ayra.Domain.Entities.SafeLocation", b =>
                {
                    b.HasOne("Ayra.Domain.Entities.Alert", "Alert")
                        .WithMany("SafeLocations")
                        .HasForeignKey("AlertId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Alert");
                });

            modelBuilder.Entity("Ayra.Domain.Entities.SafeRoute", b =>
                {
                    b.HasOne("Ayra.Domain.Entities.Alert", "Alert")
                        .WithMany("SafeRoutes")
                        .HasForeignKey("AlertId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Alert");
                });

            modelBuilder.Entity("Ayra.Domain.Entities.SafeTip", b =>
                {
                    b.HasOne("Ayra.Domain.Entities.Alert", "Alert")
                        .WithMany("SafeTips")
                        .HasForeignKey("AlertId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Alert");
                });

            modelBuilder.Entity("Ayra.Domain.Entities.User", b =>
                {
                    b.HasOne("Ayra.Domain.Entities.Coordinate", "Coordinate")
                        .WithMany("Users")
                        .HasForeignKey("CoordinateId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Coordinate");
                });

            modelBuilder.Entity("Ayra.Domain.Entities.Alert", b =>
                {
                    b.Navigation("SafeLocations");

                    b.Navigation("SafeRoutes");

                    b.Navigation("SafeTips");
                });

            modelBuilder.Entity("Ayra.Domain.Entities.Coordinate", b =>
                {
                    b.Navigation("Users");
                });

            modelBuilder.Entity("Ayra.Domain.Entities.EmergencyContact", b =>
                {
                    b.Navigation("EmergencyUsers");
                });

            modelBuilder.Entity("Ayra.Domain.Entities.User", b =>
                {
                    b.Navigation("EmergencyUsers");
                });
#pragma warning restore 612, 618
        }
    }
}
